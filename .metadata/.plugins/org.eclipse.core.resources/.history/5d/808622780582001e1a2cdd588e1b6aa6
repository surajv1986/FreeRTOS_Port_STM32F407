/*
 * queue.c
 *
 *  Created on: 13-Nov-2023
 *      Author: Dell
 */

#include <stdio.h>
#include "main.h"
#include "FreeRTOS.h"
#include "queue.h"

TaskHandle_t myTk1Handle = NULL;
TaskHandle_t myTk2Handle = NULL;

void myTk1()
{
	char myTxBuff[30];

	myQueue = xQueueCreate(5, sizeof(myTxBuff));
	sprintf(myTxBuff, "message 1");
	xQueueSend(myQueue, (void *)myTxBuff, (TickType_t) 0); /* Third parameter is the
	 	 	 	 	 	 	 	 	 	 	 	 	 	 	  blocking time in this case its zero */
	sprintf(myTxBuff, "message 2");
		xQueueSend(myQueue, (void *)myTxBuff, (TickType_t) 0);

		sprintf(myTxBuff, "message 3");
			xQueueSend(myQueue, (void *)myTxBuff, (TickType_t) 0);

	while(1){

	}

}

void myTk2()
{
	char myRxBuff[30];


	while(1){

	}

}

void init_queue()
{
	xReturn = xTaskCreate(myTk1, "Task1", 200, (void *) 0, tskIDLE_PRIORITY, &myTk1Handle);
	  if (xReturn != pdPASS) {
		  printf("Error creating task1!!!");
	  }
	  xReturn = xTaskCreate(myTk2, "Task2", 200, (void *) 0, tskIDLE_PRIORITY, &myTk2Handle);
	    if (xReturn != pdPASS) {
	  	  printf("Error creating task2!!!");
	    }

}
